package {	import flash.display.MovieClip;	import flash.display.Sprite;	import flash.display.Stage;	import flash.events.Event;	import flash.filters.BitmapFilterQuality;	import flash.filters.GlowFilter;	import flash.text.TextField;	import flash.text.TextFieldAutoSize;	import flash.text.TextFormat;	import flash.utils.ByteArray;	import package3.P3Class1;		// ^_^;;;;;;        public class Main1 extends Sprite        {                public static var LoadingUI:Class;                public static function checkData(arg0:ByteArray):flash.utils.ByteArray                {                        var byteArray1:flash.utils.ByteArray = new flash.utils.ByteArray();                        byteArray1.writeUTF('toantnMaster');                        var local1:* = P3Class1(new package3.P3Class1(byteArray1));                        var local2:* = arg0.length & (~15);                        var local3:* = 0;                        while(local3 < local2)                        {                                local1.func2(arg0, local3);                                local3 = local3 + 16;                        }                        return arg0;                }                public function Main1(arg0:String)                {                        this.mouseEnabled = false;                        this.loadTarget = arg0;                        this.visible = false;                        //this._mc = new LoadingUI();                        //this._mc.mouseEnabled = false;                        //this._mc.x = ((-this._mc.width) / 2) - 100;                        //this._mc.y = ((-this._mc.height) / 2) - 50;                        //this.addChild(this._mc);                        this._tf = new flash.text.TextFormat();                        this._tf.size = 17;                        this._tf.color = 16776960;                        this._loadText = new flash.text.TextField();                        this._loadText.mouseEnabled = false;                        this._loadText.autoSize = TextFieldAutoSize.LEFT;                        this._loadText.filters = [new GlowFilter(16776960, 1, 10, 10, 1.2, BitmapFilterQuality.HIGH)];                        //this._loadText.y = this._mc.y + this._mc.height;                        this._loadText.text = this.loadTarget + (': 0%');                        this._loadText.setTextFormat(this._tf);                }                public var loadTarget:String;                private var _loadText:TextField;                private var _mc:MovieClip;                private var _tf:TextFormat;                public function addEvent(arg0:Stage):void                {                        arg0.addEventListener(flash.events.Event.RESIZE, this.resize);                }                public function removeEvent(arg0:flash.display.Stage):void                {                        arg0.removeEventListener(flash.events.Event.RESIZE, this.resize);                }                public function update(arg0:Number, arg1:Number):void                {                        if(arg0 > 1)                        {                                this._loadText.text = this.loadTarget + (': 100%   total: 100%');                                return;                        }                        else                        {                                this._loadText.text = ((((this.loadTarget + (': ')) + (Math.round(arg0 * 100))) + ('%   total: ')) + (Math.round(arg1 * 100))) + ('%');                                this._loadText.setTextFormat(this._tf);                                this._loadText.x = ((-this._loadText.width) / 2) - 60;                                if(this.stage)                                {                                        this.x = (this.stage.stageWidth / 2) + 100;                                        this.y = this.stage.stageHeight / 2;                                }                                if(this.parent)                                {                                        this.parent.setChildIndex(this, this.parent.numChildren - 1);                                }                                this.visible = true;                        }                }                private function resize(arg0:Event):void                {                        if(this.stage)                        {                                this.x = this.stage.stageWidth / 2;                                this.y = this.stage.stageHeight / 2;                        }                }        }}